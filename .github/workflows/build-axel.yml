name: Build Axel for Windows

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install MSYS2
        uses: msys2/setup-msys2@v2
        with:
          msystem: mingw64
          update: true
          install: |
            base-devel
            mingw-w64-x86_64-gcc
            mingw-w64-x86_64-make
            mingw-w64-x86_64-pkg-config
            mingw-w64-x86_64-openssl
            mingw-w64-x86_64-wolfssl
            git

      - name: Prepare build environment
        shell: msys2 {0}
        run: |
          # 直接在当前目录（已由actions/checkout检出）进行操作
          cd ${{ github.workspace }}
          # 精确修复：在mingw32 case中添加宏定义
          sed -i '/\[\*mingw32\], \[/a \    AC_DEFINE([HAVE_BUILTIN_CLZLL], [1], [Force builtin function detection])' configure.ac && \
          # 删除导致错误的检测行
          sed -i '/AX_GCC_BUILTIN\(\[__builtin_clzll\]\)/d' configure.ac && \
          sed -i '/AS_IF\(\[test "x$ax_cv_have___builtin_clzll" = xno\], \[/d' configure.ac && \
          sed -i '/AC_MSG_ERROR\(\[Support for __builtin_clzll is required\]\)/d' configure.ac && \
          # 删除其他不兼容的检查
          sed -i '/AXEL_CHECK_MACRO(\[O_NONBLOCK\]/d' configure.ac && \
          sed -i '/AM_GNU_GETTEXT/d' configure.ac && \
          sed -i '/AM_GNU_GETTEXT_VERSION/d' configure.ac

      - name: Configure for Windows build
        shell: msys2 {0}
        run: |
          cd ${{ github.workspace }}
          rm -f config.cache config.log
          # 设置所有必要的头文件和函数检查通过
          export ac_cv_header_arpa_inet_h=yes
          export ac_cv_header_unistd_h=yes
          export ac_cv_header_netdb_h=yes
          export ac_cv_header_sys_socket_h=yes
          export ac_cv_header_sys_ioctl_h=yes
          export ac_cv_header_sys_time_h=yes
          export ac_cv_header_fcntl_h=yes
          export ac_cv_header_limits_h=yes
          export ac_cv_header_locale_h=yes
          export ac_cv_header_stdlib_h=yes
          export ac_cv_func_inet_ntoa=yes
          export ac_cv_func_getaddrinfo=yes
          export ac_cv_func_gettimeofday=yes
          export ac_cv_func_socket=yes
          export ac_cv_func_select=yes
          export ac_cv_func_malloc=yes
          export ac_cv_func_memset=yes
          export ac_cv_func_realloc=yes
          export ac_cv_func_strerror=yes
          export ac_cv_func_strcasecmp=yes
          export ac_cv_func_strncasecmp=yes
          export ac_cv_func_strchr=yes
          export ac_cv_func_strrchr=yes
          export ac_cv_func_strstr=yes
          export ac_cv_func_strtoul=yes
          export ac_cv_func_strtoll=yes
          export ac_cv_func_strpbrk=yes
          export ac_cv_func_nanosleep=yes
          export ac_cv_func_inet_ntop=yes
          export ac_cv_func_inet_pton=yes
          export ac_cv_func_getopt=yes
          export ac_cv_func_strlcpy=yes
          export ac_cv_func_strlcat=yes
          # 配置命令
          ./configure \
            --host=x86_64-w64-mingw32 \
            --disable-nls \
            CFLAGS="-static -DWIN32 -DHAVE_ARPA_INET_H=0 -include winsock2.h -include ws2tcpip.h" \
            LIBS="-lws2_32 -lssl -lcrypto"

      - name: Build
        shell: msys2 {0}
        run: |
          cd ${{ github.workspace }}
          make clean
          make

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: axel-windows
          path: ${{ github.workspace }}/axel.exe
