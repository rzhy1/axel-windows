name: Build Axel (Windows Compatibility)

on:
  push:
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup MSYS2 environment
      uses: msys2/setup-msys2@v2
      with:
        update: true
        install: |
          base-devel
          mingw-w64-x86_64-toolchain
          make
          autoconf
          automake
          autoconf-archive
          libtool
          git
          wget
          patch
          pkgconf
          gettext

    - name: Clone Axel source
      shell: msys2 {0}
      run: |
        git clone https://github.com/axel-download-accelerator/axel.git axel-src
        cd axel-src
        git log -1 --oneline

    - name: Apply Windows CI patch
      shell: msys2 {0}
      run: |
        cd axel-src

        # --- C 语言级别编译补丁 ---
        # 为 Unix/Linux 特有的头文件添加 Windows 条件编译判断
        sed -i '/#include <netinet\/in_systm.h>/i #ifndef WIN32' src/axel.h
        sed -i '/#include <netinet\/in_systm.h>/a #endif' src/axel.h
        sed -i '/#include <netinet\/in.h>/i #ifndef WIN32' src/axel.h
        sed -i '/#include <netinet\/in.h>/a #endif' src/axel.h
        
        # !!! 这是修复您问题的关键改动 !!!
        # 解决 fatal error: netinet/ip.h: No such file or directory
        sed -i '/#include <netinet\/ip.h>/i #ifndef WIN32' src/axel.h
        sed -i '/#include <netinet\/ip.h>/a #endif' src/axel.h
        
        # --- Autotools 配置脚本生成补丁 ---
        # 1. 彻底移除所有有问题的头文件检查
        sed -i '/arpa\/inet\.h/d' configure.ac
        sed -i '/netinet\/in\.h/d' configure.ac
        sed -i '/unistd\.h/d' configure.ac
        sed -i '/netdb\.h/d' configure.ac
        sed -i '/sys\/ioctl\.h/d' configure.ac
        sed -i '/sys\/socket\.h/d' configure.ac
        
        # 2. 彻底移除 O_NONBLOCK 宏的检查，避免其报错
        sed -i '/AXEL_CHECK_MACRO(\[O_NONBLOCK\]/d' configure.ac

        # 3. 移除导致 configure 语法错误的多行 _WIN32_WINNT 定义
        sed -i '/AC_DEFINE(\[_WIN32_WINNT\]/{N;d;}' configure.ac

        # 4. 从构建中彻底移除 po 目录和 Gettext 宏
        sed -i 's/ po//' Makefile.am
        sed -i '/AM_GNU_GETTEXT/d' configure.ac
        sed -i "s|po/Makefile.in||" configure.ac
        
        # 5. 正确集成 Libtool
        sed -i '/AM_INIT_AUTOMAKE/a LT_INIT' configure.ac
        echo 'ACLOCAL_AMFLAGS = -I m4' | cat - Makefile.am > temp && mv temp Makefile.am

        # 6. 为 Windows 添加一个假的 O_NONBLOCK 定义，以满足脚本逻辑
        echo 'AS_IF([echo "$host_os" | grep -qi mingw], [AC_DEFINE([O_NONBLOCK], [0], [Fake O_NONBLOCK for Windows])])' >> configure.ac


    - name: Regenerate configure scripts
      shell: msys2 {0}
      run: |
        cd axel-src
        libtoolize --force --copy
        aclocal -I m4
        autoheader
        automake --add-missing --copy
        autoconf

    - name: Configure for Windows build
      shell: msys2 {0}
      run: |
        cd axel-src
        
        # 更新 config.sub 和 config.guess 以更好地识别 Windows 环境
        wget -O build-aux/config.sub "http://git.savannah.gnu.org/cgit/config.git/plain/config.sub"
        wget -O build-aux/config.guess "http://git.savannah.gnu.org/cgit/config.git/plain/config.guess"

        rm -f config.cache config.log
        
        # 为所有 autoconf 检查的函数提供缓存变量，加速 configure
        export ac_cv_func_getaddrinfo=yes
        export ac_cv_func_gettimeofday=yes
        export ac_cv_func_inet_ntoa=yes
        export ac_cv_func_malloc=yes
        export ac_cv_func_memset=yes
        export ac_cv_func_nanosleep=yes
        export ac_cv_func_realloc=yes
        export ac_cv_func_select=yes
        export ac_cv_func_setlocale=yes
        export ac_cv_func_socket=yes
        export ac_cv_func_strcasecmp=yes
        export ac_cv_func_strchr=yes
        export ac_cv_func_strerror=yes
        export ac_cv_func_strncasecmp=yes
        export ac_cv_func_strpbrk=yes
        export ac_cv_func_strrchr=yes
        export ac_cv_func_strstr=yes
        export ac_cv_func_strtoul=yes
        export ac_cv_func_strtoll=yes

        # ==================== 核心改动 ====================
        # 为 O_NONBLOCK 宏检查提供缓存变量，告诉 configure 它“存在”
        export ax_cv_macro_O_NONBLOCK=yes
        # =================================================

        ./configure \
          --host=x86_64-w64-mingw32 \
          --disable-doc

    - name: Build Axel
      shell: msys2 {0}
      run: |
        cd axel-src
        make -j$(nproc) \
          CFLAGS="-static -DWIN32 -include winsock2.h -include ws2tcpip.h" \
          LIBS="-lws2_32 -lssl -lcrypto"

    - name: Verify binary
      shell: cmd
      run: |
        cd axel-src\src
        .\axel.exe --version || echo "✅ Build OK"

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: axel-windows-static
        path: axel-src/src/axel.exe
