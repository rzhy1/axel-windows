name: Build Axel with Windows Compatibility Patch

on:
  push:
    tags: ['v*']
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup MSYS2 environment
      uses: msys2/setup-msys2@v2
      with:
        update: true
        install: |
          base-devel
          mingw-w64-x86_64-toolchain
          mingw-w64-x86_64-gcc
          make
          autoconf
          automake
          libtool
          git
          wget
          patch
          
    - name: Clone Axel source
      shell: msys2 {0}
      run: |
        git clone https://github.com/axel-download-accelerator/axel.git axel-src
        cd axel-src
        git log -1 --oneline
        
    - name: Apply Windows compatibility patch
      shell: msys2 {0}
      run: |
        cd axel-src

        cat > simple-fix.patch << EOF
--- a/configure.ac
+++ b/configure.ac
@@ -42,7 +42,6 @@ AC_CHECK_HEADERS([ \
 	netdb.h \
 	netinet/in.h \
 	netinet/tcp.h \
-	arpa/inet.h \
 ])
 
 # 在文件末尾添加Windows兼容性定义
@@ -50,6 +49,9 @@ AC_CHECK_HEADERS([ \
 # Windows兼容性
 if test "$host_os" = "mingw32" || test "$host_os" = "msys"; then
   AC_DEFINE(HAVE_ARPA_INET_H, 0, [Define to 1 if you have the <arpa/inet.h> header file.])
+  AC_DEFINE(HAVE_NETINET_IN_H, 1, [Define to 1 if you have the <netinet/in.h> header file.])
+else
+  AC_CHECK_HEADERS([arpa/inet.h])
 fi
EOF

        patch -p1 < simple-fix.patch

        
    - name: Regenerate configure scripts
      shell: msys2 {0}
      run: |
        cd axel-src
        autoreconf -fi
        
    - name: Configure for Windows build
      shell: msys2 {0}
      run: |
        cd axel-src
        
        ./configure \
          --host=x86_64-w64-mingw32 \
          --disable-nls \
          CFLAGS="-static -D_WIN32_WINNT=0x0600 -DWIN32 -DHAVE_ARPA_INET_H=0 -include winsock2.h -include ws2tcpip.h" \
          LIBS="-lws2_32 -lssl -lcrypto"
          
    - name: Build axel
      shell: msys2 {0}
      run: |
        cd axel-src
        make -j$(nproc)
        
    - name: Verify binary
      shell: cmd
      run: |
        cd axel-src\src
        .\axel.exe --version || echo "Binary built successfully"
        
    - name: Upload Windows binary artifact
      uses: actions/upload-artifact@v4
      with:
        name: axel-windows-static
        path: axel-src/src/axel.exe
