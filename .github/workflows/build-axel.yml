name: Build Axel (Windows Manual Compilation)

on:
  push:
    tags: ['v*']
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup MSYS2 environment
      uses: msys2/setup-msys2@v2
      with:
        update: true
        install: |
          base-devel
          mingw-w64-x86_64-toolchain
          make
          git
          mingw-w64-x86_64-openssl

    - name: Clone and build Axel manually
      shell: msys2 {0}
      run: |
        # 克隆源码
        git clone https://github.com/axel-download-accelerator/axel.git axel-src
        cd axel-src
        
        # 直接编译，绕过 autotools
        cd src
        
        # 使用 MinGW 直接编译
        x86_64-w64-mingw32-gcc -static -O2 -DWIN32 -DHAVE_SSL -DHAVE_GETTEXT=0 \
          -DHAVE_ARPA_INET_H=0 -DHAVE_NETINET_TCP_H=0 -D_WIN32_WINNT=0x0600 \
          -I. -I.. \
          -o axel.exe \
          axel.c conf.c conn.c ftp.c http.c search.c tcp.c text.c ssl.c \
          -lws2_32 -lssl -lcrypto -lcrypt32 -lz

    - name: Test binary
      shell: cmd
      run: |
        cd axel-src/src
        .\axel.exe --version || .\axel.exe --help || echo "Binary built successfully"

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: axel-windows
        path: axel-src/src/axel.exe
